
/*
* Copyright (c) 2020 The ZMK Contributors
*
* SPDX-License-Identifier: MIT
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

&mt {
    tapping_term_ms = <200>;
};

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// | NXT |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | VOLU|
// | MUTE| S(A)|  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  | S(;)| PLAY|
// | PRV | G(Z)|  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  | G(/)| VOLD|
//                   | GUI | LWR | SPC |   | BSP | RSE  | ALT |
                        bindings = <
  &trans  &kp Q        &kp W &kp E &kp R &kp T       &kp Y &kp U  &kp I    &kp O   &kp P             &trans
  &trans  &mt LSHFT A  &kp S &kp D &kp F &kp G       &kp H &kp J  &kp K    &kp L   &mt RShFT SCLN     &trans
  &trans  &mt LGUI Z   &kp X &kp C &kp V &kp B       &kp N &kp M  &kp CMMA &kp DOT &mt RWIN FSLH     &trans
                               &kp LWIN &mo 1 &kp SPC     &kp BKSP &mo 2 &kp RALT
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |     |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |     |
// | SFT |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |     |
// |     | ESC | TAB | CAP | TILD| GRAV|   | QUOT|     |     |     |     |     |
//                   | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
  &bt BT_CLR  &kp N1        &kp N2          &kp N3          &kp N4          &kp N5           &kp N6           &kp N7          &kp N8          &kp N9           &kp N0           &trans
  &kp LSFT    &kp EXCL      &kp AT          &kp HASH        &kp DLLR        &kp PRCNT        &kp CRRT         &kp AMPS        &kp STAR        &kp LPAR         &RPAR            &kp RSFT
  &kp LWIN    &kp ESC       &kp TAB         &kp 0x39        &kp TILD        &kp GRAV         &kp QUOT         &trans          &cp M_PREV      &cp M_PLAY       &cp M_NEXT       &trans
                                                             &kp LWIN &trans &kp SPC   &kp RET &trans &cp M_VOLU
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |     |  -  |  =  |  [  |  ]  |  \  |   |     |     |     |      |     |  RST |
// |     |  _  |  +  |  {  |  }  | "|" |   |     |     |  UP |      |     | BRST |
// |     | F1  | F2  | F3  | F4  | F5  |   |     | LFT | DWN |  RGT |     |      |
//                   | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
    &trans   &kp MINUS         &kp EQUAL        &kp KBKT          &kp RBKT          &kp BSLH           &trans    &trans     &trans     &trans   &trans &trans
    &kp LSFT &kp UNDER         &kp PLUS         &kp LBRC          &kp RBRC          &kp PIPE           &trans    &kp UARW   &trans     &trans   &trans &trans
    &kp LWIN &kp 0x3A          &kp 0x3B         &kp 0x3C          &kp 0x3D          &kp 0x3E           &kp LARW  &kp DARW   &kp RARW   &trans   &trans &trans
                                        &cp M_VOLD &trans &kp SPC   &kp RET &trans &kp RALT
                        >;
                };
        };
};
